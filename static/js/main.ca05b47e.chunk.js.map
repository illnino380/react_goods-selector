{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGood","handleSelectClear","setState","handleSelectGood","good","this","className","type","onClick","goodsFromServer","map","isSelectedGood","classNames","uuidv4","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCEWA,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,kBAAoB,WAClB,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,iBAAmB,SAACC,GAClB,EAAKF,SAAS,CACZF,aAAcI,KAXpB,4CAeE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SAEIN,EAAY,UACLA,EADK,gBAER,sBAIPA,GACC,wBACEO,KAAK,SACLD,UAAU,oBACVE,QAASH,KAAKJ,kBAHhB,sBAUJ,oBAAIK,UAAU,QAAd,SACGG,EAAgBC,KAAI,SAAAN,GACnB,IAAMO,EAAiBP,IAASJ,EAEhC,OACE,qBAEEM,UAAWM,IACT,yBACA,CAAE,eAAgBD,IAJtB,UAOGP,EAEAO,GACC,wBACEJ,KAAK,SACLD,UAAU,sBACVE,QAAS,EAAKP,kBAHhB,oBASDU,GACC,wBACEJ,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAM,EAAKL,iBAAiBC,IAHvC,sBAnBGS,2BA9CrB,GAAyBC,IAAMC,WCT/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ca05b47e.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport 'bulma/css/bulma.min.css';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\n\nimport goodsFromServer from './goods';\n\ninterface State {\n  selectedGood: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleSelectClear = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  handleSelectGood = (good: string) => {\n    this.setState({\n      selectedGood: good,\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {\n              selectedGood\n                ? `${selectedGood} is selected`\n                : 'No goods selected'\n            }\n          </h1>\n\n          {selectedGood && (\n            <button\n              type=\"button\"\n              className=\"button App__clear\"\n              onClick={this.handleSelectClear}\n            >\n              Clear\n            </button>\n          )}\n        </header>\n\n        <ul className=\"block\">\n          {goodsFromServer.map(good => {\n            const isSelectedGood = good === selectedGood;\n\n            return (\n              <li\n                key={uuidv4()}\n                className={classNames(\n                  'box subtitle is-4 Good',\n                  { 'Good--active': isSelectedGood },\n                )}\n              >\n                {good}\n\n                {isSelectedGood && (\n                  <button\n                    type=\"button\"\n                    className=\"button Good__remove\"\n                    onClick={this.handleSelectClear}\n                  >\n                    Remove\n                  </button>\n                )}\n\n                {isSelectedGood || (\n                  <button\n                    type=\"button\"\n                    className=\"button Good__select\"\n                    onClick={() => this.handleSelectGood(good)}\n                  >\n                    Select\n                  </button>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}